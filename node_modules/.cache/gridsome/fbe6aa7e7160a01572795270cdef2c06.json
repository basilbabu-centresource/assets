{"remainingRequest":"/home/blesy/Desktop/assets/node_modules/babel-loader/lib/index.js??ref--1-1!/home/blesy/Desktop/assets/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/blesy/Desktop/assets/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/blesy/Desktop/assets/src/templates/Article.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/blesy/Desktop/assets/src/templates/Article.vue","mtime":1619525747649},{"path":"/home/blesy/Desktop/assets/node_modules/cache-loader/dist/cjs.js","mtime":1619525890957},{"path":"/home/blesy/Desktop/assets/node_modules/babel-loader/lib/index.js","mtime":1619525890949},{"path":"/home/blesy/Desktop/assets/node_modules/cache-loader/dist/cjs.js","mtime":1619525890957},{"path":"/home/blesy/Desktop/assets/node_modules/vue-loader/lib/index.js","mtime":1619525893783}],"contextDependencies":[],"result":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport _objectSpread from \"/home/blesy/Desktop/assets/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueMarkdown from \"vue-markdown\";\nimport { getStrapiMedia } from \"~/utils/medias\";\nimport { getMetaTags } from \"~/utils/seo\";\nimport moment from \"moment\";\nexport default {\n  data: function data() {\n    return {\n      moment: moment\n    };\n  },\n  components: {\n    VueMarkdown: VueMarkdown\n  },\n  methods: {\n    getStrapiMedia: getStrapiMedia\n  },\n  metaInfo: function metaInfo() {\n    var _this$$page$strapi$ar = this.$page.strapi.articles[0],\n        title = _this$$page$strapi$ar.title,\n        description = _this$$page$strapi$ar.description,\n        image = _this$$page$strapi$ar.image;\n    var _this$$page$strapi$gl = this.$page.strapi.global,\n        defaultSeo = _this$$page$strapi$gl.defaultSeo,\n        favicon = _this$$page$strapi$gl.favicon; // Merge default and article-specific SEO data\n\n    var seo = _objectSpread(_objectSpread({}, defaultSeo), {}, {\n      metaTitle: title,\n      metaDescription: description,\n      shareImage: image\n    });\n\n    return {\n      title: this.$page.strapi.articles[0].title,\n      meta: getMetaTags(seo),\n      link: [{\n        rel: \"favicon\",\n        href: getStrapiMedia(favicon.url)\n      }]\n    };\n  }\n};",{"version":3,"sources":["Article.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,OAAA,WAAA,MAAA,cAAA;AACA,SAAA,cAAA,QAAA,gBAAA;AACA,SAAA,WAAA,QAAA,aAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GANA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,EAAA;AADA,GATA;AAYA,EAAA,QAZA,sBAYA;AAAA,gCACA,KAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CADA;AAAA,QACA,KADA,yBACA,KADA;AAAA,QACA,WADA,yBACA,WADA;AAAA,QACA,KADA,yBACA,KADA;AAAA,gCAEA,KAAA,KAAA,CAAA,MAAA,CAAA,MAFA;AAAA,QAEA,UAFA,yBAEA,UAFA;AAAA,QAEA,OAFA,yBAEA,OAFA,EAIA;;AACA,QAAA,GAAA,mCACA,UADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,eAAA,EAAA,WAHA;AAIA,MAAA,UAAA,EAAA;AAJA,MAAA;;AAOA,WAAA;AACA,MAAA,KAAA,EAAA,KAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,WAAA,CAAA,GAAA,CAFA;AAGA,MAAA,IAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,cAAA,CAAA,OAAA,CAAA,GAAA;AAFA,OADA;AAHA,KAAA;AAUA;AAlCA,CAAA","sourcesContent":["<template>\n  <Layout>\n    <section class=\"single-blog\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-12 mt-40 mb-50\">\n            <g-image :src=\"getStrapiMedia($page.strapi.articles[0].image.url)\" />\n          </div>\n          <div class=\"col-md-12 mb-60\">\n            <h2>{{ $page.strapi.articles[0].title }}</h2>\n            <h6>\n              {{ $page.strapi.articles[0].category.name }}\n              <span>{{\n                moment($page.strapi.articles[0].publishedAt).format(\n                  \"DD MMM YY\"\n                )\n              }}</span>\n            </h6> \n            <p>{{ $page.strapi.articles[0].content }}</p>\n\n          </div>\n        </div>\n      </div>\n    </section>\n  </Layout>\n</template>\n\n<page-query>\nquery($slug: String!) {\n  strapi {\n    articles(where: { slug: $slug }) {\n      title\n      description\n      content\n      publishedAt\n      category {\n        name\n      }\n      image {\n        url\n      }\n      author {\n        name\n        picture {\n          url\n        }\n      }\n    }\n    global {\n      siteName\n      favicon {\n        url\n      }\n      defaultSeo {\n        metaTitle\n        metaDescription\n        shareImage {\n          url\n        }\n      }\n    }\n  }\n}\n</page-query>\n\n<script>\nimport VueMarkdown from \"vue-markdown\";\nimport { getStrapiMedia } from \"~/utils/medias\";\nimport { getMetaTags } from \"~/utils/seo\";\nimport moment from \"moment\";\n\nexport default {\n  data() {\n    return {\n      moment: moment,\n    };\n  },\n  components: {\n    VueMarkdown,\n  },\n  methods: {\n    getStrapiMedia,\n  },\n  metaInfo() {\n    const { title, description, image } = this.$page.strapi.articles[0];\n    const { defaultSeo, favicon } = this.$page.strapi.global;\n\n    // Merge default and article-specific SEO data\n    const seo = {\n      ...defaultSeo,\n      metaTitle: title,\n      metaDescription: description,\n      shareImage: image,\n    };\n\n    return {\n      title: this.$page.strapi.articles[0].title,\n      meta: getMetaTags(seo),\n      link: [\n        {\n          rel: \"favicon\",\n          href: getStrapiMedia(favicon.url),\n        },\n      ],\n    };\n  },\n};\n</script>\n"],"sourceRoot":"src/templates"}]}