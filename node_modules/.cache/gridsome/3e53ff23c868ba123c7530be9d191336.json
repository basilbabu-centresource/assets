{"remainingRequest":"/home/blesy/Desktop/assets/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/blesy/Desktop/assets/src/components/PropertySearchMobile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/blesy/Desktop/assets/src/components/PropertySearchMobile.vue","mtime":1619537673892},{"path":"/home/blesy/Desktop/assets/node_modules/cache-loader/dist/cjs.js","mtime":1619525890957},{"path":"/home/blesy/Desktop/assets/node_modules/babel-loader/lib/index.js","mtime":1619525890949},{"path":"/home/blesy/Desktop/assets/node_modules/cache-loader/dist/cjs.js","mtime":1619525890957},{"path":"/home/blesy/Desktop/assets/node_modules/vue-loader/lib/index.js","mtime":1619525893783}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {numeric, required} from 'vee-validate/dist/rules';\nimport axios from 'axios'\nimport {getStrapiMedia} from \"~/utils/medias\";\nimport Loading from 'vue-loading-overlay';\n\nextend('required', {\n  ...required,\n  message: 'This field is required'\n});\n\nextend('numeric', {\n  ...numeric,\n  message: 'Enter a valid phone number'\n\n});\n\n\nexport default {\n  name: \"PropertySearch\",\n  props:['page'],\n  mounted() {\n    this.pagination.page=this.page\n    this.activeTab = this.$route.query.category ? this.$route.query.category : 1;\n    this.searchForm = this.getParams();\n    this.getProperty();\n    this.getCompletion();\n    this.getPropertyCategory();\n    if (Object.keys(this.$route.query).length) {\n      this.onSubmit();\n    }\n\n  },\n  components: {ValidationObserver, ValidationProvider, Loading},\n  data() {\n    return {\n      searchForm: {location: 0, completion: 0, property: 0},\n      activeTab: 1,\n      projectCompletion: [],\n      propertyType: [],\n      propertyCategory: [],\n\n      isLoading: false,\n      currentPage: 1,\n      pagination: {\n        \"page\": \"1\",\n        \"per_page\": \"5\",\n        \"next_page\": \"2\",\n      },\n\n    }\n  },\n  watch:{\n    page(newVal,oldVal){\n      this.currentPage=newVal;\n      this.onSubmit();\n    }\n  },\n\n  methods: {\n    getParams() {\n      var fullUrl = this.$route.fullPath;\n      var paramsArray = fullUrl.split('?');\n      if (typeof paramsArray[1] === 'string') {\n        const urlParams = new URLSearchParams(paramsArray[1]);\n        return Object.fromEntries(urlParams);\n      } else return {location: 0};\n    },\n    getStrapiMedia,\n    searchToggle(val) {\n\n      this.activeTab = val;\n    },\n    async onSubmit() {\n      try {\n        this.searchForm.category = this.activeTab;\n        if (this.$router.history.current.path === \"/search\" || this.$router.history.current.path === \"/search/\") {\n          this.isLoading = true;\n          var formData = JSON.parse(JSON.stringify(this.searchForm));\n          if (formData.location == 0)\n            delete formData.location;\n          if (formData.completion == 0)\n            delete formData.completion;\n          if (formData.property == 0)\n            delete formData.property;\n          if (formData.category == 0)\n            delete formData.category;\n\n          // page=4&per_page=5\n          if (this.pagination)\n            formData.page = this.currentPage;\n\n          console.log(formData)\n          const results = await axios.get(\n              getStrapiMedia('/properties/search'),\n              {params: formData}\n          );\n          var data = (typeof results.data == 'object' ) ? results.data : [];\n          this.pagination = typeof data.pagination == 'object' ? data.pagination : {};\n\n          this.$emit('onSearchResult', (typeof results.data == 'object' && typeof results.data.data == 'object') ? data : []);\n          this.isLoading = false;\n        } else {\n          this.$router.push({\n            path: '/search',\n            query: this.searchForm\n          })\n        }\n\n      } catch (error) {\n        this.isLoading = false;\n\n        console.log(error);\n        return [];\n      }\n\n    },\n    async getCompletion() {\n      try {\n        const results = await axios.get(\n            getStrapiMedia('/project-statuses')\n        );\n\n        // console.log(results.data);\n        this.projectCompletion = results.data;\n        if (typeof this.projectCompletion === 'object') {\n          this.searchForm.completion = this.$route.query.completion ? this.$route.query.completion : 0\n        }\n      } catch (error) {\n\n        console.log(error);\n        return [];\n      }\n\n    },\n\n    async getProperty() {\n      try {\n        const results = await axios.get(\n            getStrapiMedia('/property-types')\n        );\n\n        // console.log(results.data);\n        this.propertyType = results.data;\n        if (typeof this.propertyType === 'object')\n          this.searchForm.property = this.$route.query.property ? this.$route.query.property : 0\n\n      } catch (error) {\n\n        console.log(error);\n        return [];\n      }\n\n    },\n\n    async getPropertyCategory() {\n      try {\n        const results = await axios.get(\n            getStrapiMedia('/property-statuses')\n        );\n        // console.log(results.data);\n        this.propertyCategory = results.data;\n        if (typeof this.propertyType === 'object')\n          this.searchForm.category = this.$route.query.category ? this.$route.query.category : 0\n\n      } catch (error) {\n\n        console.log(error);\n        return [];\n      }\n\n    },\n\n  }\n}\n",{"version":3,"sources":["PropertySearchMobile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA","file":"PropertySearchMobile.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <loading :active.sync=\"isLoading\"\n             :can-cancel=\"false\"\n             loader=\"dots\"\n             color=\"rgb(42, 46, 67)\"\n             :is-full-page=\"true\"></loading>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"slider-search\">\n          <ul>\n            <li :class=\"activeTab==cat.id? 'active':''\" @click=\"searchToggle(cat.id)\" v-for=\"(cat,ind) in propertyCategory\">\n              {{ cat.name }}\n            </li>\n          </ul>\n          <ValidationObserver v-slot=\"{ handleSubmit }\">\n\n            <form class=\"search-form buy-searchForm\" action=\"\" @submit.prevent=\"handleSubmit(onSubmit)\">\n              <div class=\"row\">\n                <div class=\"col-md-6 col-5 m-auto\">\n                  <label>Location\n                    <g-image src=\"~/assets/images/dropdown.svg\"/>\n                  </label>\n                </div>\n                <div class=\"col-md-6 col-7\">\n                  <select v-model=\"searchForm.location\">\n                    <option value=\"0\">-Select- </option>\n                    <option value=\"dubai\">Dubai</option>\n                    <option value=\"India\">India</option>\n                    <option value=\"USA\">USA</option>\n                  </select>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-5 m-auto\">\n                  <label>Completion\n                    <g-image src=\"~/assets/images/dropdown.svg\"/>\n                  </label>\n                </div>\n                <div class=\"col-md-6 col-7\">\n                  <select v-model=\"searchForm.completion\">\n                    <option value=\"0\">-Select-</option>\n                    <option v-for=\"(cmp,ind) in projectCompletion\" :value=\"cmp.id\">{{ cmp.name }}</option>\n                  </select>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-6 col-5 m-auto\">\n                  <label>Property\n                    <g-image src=\"~/assets/images/dropdown.svg\"/>\n                  </label>\n                </div>\n                <div class=\"col-md-6 col-7\">\n                  <select v-model=\"searchForm.property\">\n                    <option value=\"0\">-Select-</option>\n                    <option v-for=\"(cmp,ind) in propertyType\" :value=\"cmp.id\">{{ cmp.name }}</option>\n                  </select>\n                </div>\n              </div>\n              <!-- <div class=\"row\">\n                <div class=\"col-md-6 col-5\">\n                  <label>Minimum</label>\n                </div>\n                <div class=\"col-md-6 col-7\">\n                  <input type=\"text\" name=\"minimum\" placeholder=\"AED320,000\" v-model=\"searchForm.min_price\"/>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-5\">\n                  <label>Maximum</label>\n                </div>\n                <div class=\"col-md-6 col-7\">\n                  <input type=\"text\" name=\"maximum\" placeholder=\"AED820,000\" v-model=\"searchForm.max_price\"/>\n                </div>\n              </div> -->\n\n              <div class=\"d-flex flex-column searchBtn\">\n                <input type=\"submit\" value=\"Search\"/>\n              </div>\n            </form>\n          </ValidationObserver>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {numeric, required} from 'vee-validate/dist/rules';\nimport axios from 'axios'\nimport {getStrapiMedia} from \"~/utils/medias\";\nimport Loading from 'vue-loading-overlay';\n\nextend('required', {\n  ...required,\n  message: 'This field is required'\n});\n\nextend('numeric', {\n  ...numeric,\n  message: 'Enter a valid phone number'\n\n});\n\n\nexport default {\n  name: \"PropertySearch\",\n  props:['page'],\n  mounted() {\n    this.pagination.page=this.page\n    this.activeTab = this.$route.query.category ? this.$route.query.category : 1;\n    this.searchForm = this.getParams();\n    this.getProperty();\n    this.getCompletion();\n    this.getPropertyCategory();\n    if (Object.keys(this.$route.query).length) {\n      this.onSubmit();\n    }\n\n  },\n  components: {ValidationObserver, ValidationProvider, Loading},\n  data() {\n    return {\n      searchForm: {location: 0, completion: 0, property: 0},\n      activeTab: 1,\n      projectCompletion: [],\n      propertyType: [],\n      propertyCategory: [],\n\n      isLoading: false,\n      currentPage: 1,\n      pagination: {\n        \"page\": \"1\",\n        \"per_page\": \"5\",\n        \"next_page\": \"2\",\n      },\n\n    }\n  },\n  watch:{\n    page(newVal,oldVal){\n      this.currentPage=newVal;\n      this.onSubmit();\n    }\n  },\n\n  methods: {\n    getParams() {\n      var fullUrl = this.$route.fullPath;\n      var paramsArray = fullUrl.split('?');\n      if (typeof paramsArray[1] === 'string') {\n        const urlParams = new URLSearchParams(paramsArray[1]);\n        return Object.fromEntries(urlParams);\n      } else return {location: 0};\n    },\n    getStrapiMedia,\n    searchToggle(val) {\n\n      this.activeTab = val;\n    },\n    async onSubmit() {\n      try {\n        this.searchForm.category = this.activeTab;\n        if (this.$router.history.current.path === \"/search\" || this.$router.history.current.path === \"/search/\") {\n          this.isLoading = true;\n          var formData = JSON.parse(JSON.stringify(this.searchForm));\n          if (formData.location == 0)\n            delete formData.location;\n          if (formData.completion == 0)\n            delete formData.completion;\n          if (formData.property == 0)\n            delete formData.property;\n          if (formData.category == 0)\n            delete formData.category;\n\n          // page=4&per_page=5\n          if (this.pagination)\n            formData.page = this.currentPage;\n\n          console.log(formData)\n          const results = await axios.get(\n              getStrapiMedia('/properties/search'),\n              {params: formData}\n          );\n          var data = (typeof results.data == 'object' ) ? results.data : [];\n          this.pagination = typeof data.pagination == 'object' ? data.pagination : {};\n\n          this.$emit('onSearchResult', (typeof results.data == 'object' && typeof results.data.data == 'object') ? data : []);\n          this.isLoading = false;\n        } else {\n          this.$router.push({\n            path: '/search',\n            query: this.searchForm\n          })\n        }\n\n      } catch (error) {\n        this.isLoading = false;\n\n        console.log(error);\n        return [];\n      }\n\n    },\n    async getCompletion() {\n      try {\n        const results = await axios.get(\n            getStrapiMedia('/project-statuses')\n        );\n\n        // console.log(results.data);\n        this.projectCompletion = results.data;\n        if (typeof this.projectCompletion === 'object') {\n          this.searchForm.completion = this.$route.query.completion ? this.$route.query.completion : 0\n        }\n      } catch (error) {\n\n        console.log(error);\n        return [];\n      }\n\n    },\n\n    async getProperty() {\n      try {\n        const results = await axios.get(\n            getStrapiMedia('/property-types')\n        );\n\n        // console.log(results.data);\n        this.propertyType = results.data;\n        if (typeof this.propertyType === 'object')\n          this.searchForm.property = this.$route.query.property ? this.$route.query.property : 0\n\n      } catch (error) {\n\n        console.log(error);\n        return [];\n      }\n\n    },\n\n    async getPropertyCategory() {\n      try {\n        const results = await axios.get(\n            getStrapiMedia('/property-statuses')\n        );\n        // console.log(results.data);\n        this.propertyCategory = results.data;\n        if (typeof this.propertyType === 'object')\n          this.searchForm.category = this.$route.query.category ? this.$route.query.category : 0\n\n      } catch (error) {\n\n        console.log(error);\n        return [];\n      }\n\n    },\n\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}