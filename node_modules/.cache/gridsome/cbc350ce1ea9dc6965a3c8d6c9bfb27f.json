{"remainingRequest":"/home/blesy/Desktop/assets/node_modules/babel-loader/lib/index.js??ref--1-1!/home/blesy/Desktop/assets/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/blesy/Desktop/assets/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/blesy/Desktop/assets/src/pages/List Your Property.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/blesy/Desktop/assets/src/pages/List Your Property.vue","mtime":1619525747649},{"path":"/home/blesy/Desktop/assets/node_modules/cache-loader/dist/cjs.js","mtime":1619525890957},{"path":"/home/blesy/Desktop/assets/node_modules/babel-loader/lib/index.js","mtime":1619525890949},{"path":"/home/blesy/Desktop/assets/node_modules/cache-loader/dist/cjs.js","mtime":1619525890957},{"path":"/home/blesy/Desktop/assets/node_modules/vue-loader/lib/index.js","mtime":1619525893783}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.match\";\nimport \"core-js/modules/es.string.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/blesy/Desktop/assets/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/blesy/Desktop/assets/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Articles from \"~/components/Articles\";\nimport { getMetaTags } from \"~/utils/seo\";\nimport { getStrapiMedia } from \"~/utils/medias\";\nimport { extend, ValidationObserver, ValidationProvider } from \"vee-validate\";\nimport { email, numeric, required, ext } from \"vee-validate/dist/rules\";\nimport Loading from \"vue-loading-overlay\";\n\nvar axios = require(\"axios\");\n\nextend(\"Passportext\", _objectSpread(_objectSpread({}, ext), {}, {\n  message: \"Please Add Valid Passport Document\"\n}));\nextend(\"Titleext\", _objectSpread(_objectSpread({}, ext), {}, {\n  message: \"Please Add Valid Title Deed Document\"\n}));\nextend(\"Floorext\", _objectSpread(_objectSpread({}, ext), {}, {\n  message: \"Please Add Valid Floore Plan Document\"\n}));\nextend(\"required\", _objectSpread(_objectSpread({}, required), {}, {\n  message: \"This field is required\"\n}));\nextend(\"email\", _objectSpread(_objectSpread({}, email), {}, {\n  message: \"Enter a valid Email Id\"\n}));\nextend(\"numeric\", _objectSpread(_objectSpread({}, numeric), {}, {\n  message: \"Enter a valid Phone Number\"\n}));\nextend(\"bathRoomCount\", _objectSpread(_objectSpread({}, numeric), {}, {\n  message: \"Enter a valid Bathroom Number\"\n}));\nextend(\"property\", _objectSpread(_objectSpread({}, required), {}, {\n  message: \"Property Location is required\"\n}));\nextend(\"bedCount\", _objectSpread(_objectSpread({}, numeric), {}, {\n  message: \"Enter a valid BedRoom Number\"\n}));\nextend(\"fullName\", _objectSpread(_objectSpread({}, required), {}, {\n  message: \"Full Name is required\"\n}));\nextend(\"emailId\", _objectSpread(_objectSpread({}, required), {}, {\n  message: \"Email Id is required\"\n}));\nextend(\"mobileNo\", _objectSpread(_objectSpread({}, required), {}, {\n  message: \"Mobile Number is required\"\n}));\nextend(\"file\", {\n  message: \"Not a image file\",\n  validate: function validate(value) {\n    // console.log(\"value=\", value);\n    return false; //Test the regex. Test function returns a true or false value.\n  }\n});\nexport default {\n  components: {\n    Articles: Articles,\n    ValidationProvider: ValidationProvider,\n    ValidationObserver: ValidationObserver,\n    Loading: Loading\n  },\n  data: function data() {\n    return {\n      listshow: {\n        \"margin-left\": \"339px!important\"\n      },\n      formData: null,\n      pListing: {\n        property_type: 0\n      },\n      isLoading: false,\n      isSuccess: false,\n      responseData: undefined,\n      errorResponse: undefined,\n      valueKey: \"\",\n      stringKey: \"\",\n      isError: false\n    };\n  },\n  methods: {\n    filesChange: function filesChange(target, validate) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var fieldName, file, valid;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fieldName = target.name, file = target.files;\n                _context.next = 3;\n                return validate(file[0]);\n\n              case 3:\n                valid = _context.sent;\n\n                if (valid.valid) {\n                  _this.formData.append(fieldName, file[0], file[0].name);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    saveproperty: function saveproperty() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var formElement, request, formData, formElements, data, i, currentElement, file, _i, _file, result;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                formElement = document.querySelector(\"form\");\n                _this2.isLoading = true;\n                request = new XMLHttpRequest();\n                formData = new FormData();\n                formElements = formElement.elements;\n                data = {};\n\n                for (i = 0; i < formElements.length; i++) {\n                  currentElement = formElements[i];\n\n                  if (![\"submit\", \"file\"].includes(currentElement.type)) {\n                    if (currentElement.value) data[currentElement.name] = currentElement.value;\n                  } else if (currentElement.type === \"file\") {\n                    if (currentElement.files.length === 1) {\n                      file = currentElement.files[0];\n                      formData.append(\"files.\".concat(currentElement.name), file, file.name);\n                    } else {\n                      for (_i = 0; _i < currentElement.files.length; _i++) {\n                        _file = currentElement.files[_i];\n                        formData.append(\"files.\".concat(currentElement.name), _file, _file.name);\n                      }\n                    }\n                  }\n                }\n\n                recaptcha = grecaptcha.getResponse();\n                formData.recaptcha = recaptcha; // //  data.append(recaptcha)\n                //     console.log(\"from list\",formData);\n                // start get response and show notification\n\n                formData.append(\"data\", JSON.stringify(data));\n                console.log(\"form data from here\", data);\n                _context2.next = 13;\n                return axios.post(getStrapiMedia(\"/property-listings\"), formData).then(function (response) {\n                  _this2.responseData = response.status;\n\n                  if (_this2.responseData == 200) {\n                    _this2.isError = false;\n\n                    _this2.showToast();\n                  }\n\n                  alert(\"Successfully submitted\");\n                })[\"catch\"](function (err) {\n                  _this2.errorResponse = err.response.data.message;\n                  _this2.isError = true;\n\n                  _this2.showErrorToast();\n                });\n\n              case 13:\n                result = _context2.sent;\n                //  end res\n                // try {\n                //   formData.append(\"data\", JSON.stringify(data));\n                //   var result = await axios.post(\n                //     getStrapiMedia(\"/property-listings\"),\n                //     formData\n                //   );\n                //   formElement.reset();\n                //   formData = new FormData();\n                //   alert(\"Successfully submitted\");\n                //   // this.showToast();\n                // } catch (e) {\n                //   console.log(e);\n                //   alert(\"Error while submitting request\");\n                // }\n                //\n                //   request.open('POST', getStrapiMedia('/property-listings'));\n                //  request.send(formData);\n                _this2.isLoading = false;\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    onCancel: function onCancel() {},\n    showToast: function showToast() {\n      this.$notify({\n        type: \"success\",\n        group: \"foo\",\n        title: \"Property Details\",\n        duration: 3000,\n        width: \"200px\",\n        position: \"center\",\n        text: \"Successfully submitted Property Details Form!\"\n      });\n    },\n    showErrorToast: function showErrorToast() {\n      this.$notify({\n        type: \"error\",\n        group: \"foo\",\n        title: \"Failed\",\n        duration: 30000,\n        width: \"200px\",\n        position: \"center\",\n        text: this.errorResponse\n      });\n    },\n    acceptNumber: function acceptNumber() {\n      var x = this.valueKey.replace(/\\D/g, \"\").match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/); // match value key is number or not\n\n      this.value = !x[2] ? x[1] : \"(\" + x[1] + \") \" + x[2] + (x[3] ? \"-\" + x[3] : \"\");\n    },\n    isLetter: function isLetter(e) {\n      var _char = String.fromCharCode(e.keyCode); // Get the character\n\n\n      if (/^[A-Za-z]+$/.test(_char)) return true; // Match with regex\n      else e.preventDefault(); // If not match, don't add to input text\n    },\n    isDouble: function isDouble(e) {\n      var _char2 = String.fromCharCode(e.keyCode); // Get the character\n\n\n      if (/^[0-9.]+$/.test(_char2)) return true;else e.preventDefault();\n    }\n  },\n  mounted: function mounted() {\n    this.formData = new FormData();\n    console.log(this.$page.strapi.propertyTypes);\n    var hypothesisScript = document.createElement(\"script\");\n    hypothesisScript.setAttribute(\"src\", \"https://www.google.com/recaptcha/api.js\");\n    document.body.appendChild(hypothesisScript);\n  },\n  metaInfo: function metaInfo() {\n    var _this$$page$strapi$gl = this.$page.strapi.global,\n        defaultSeo = _this$$page$strapi$gl.defaultSeo,\n        favicon = _this$$page$strapi$gl.favicon; // Merge default and article-specific SEO data\n\n    var fullSeo = _objectSpread({}, defaultSeo);\n\n    return {\n      title: fullSeo.metaTitle,\n      meta: getMetaTags(fullSeo),\n      link: [{\n        rel: \"favicon\",\n        href: getStrapiMedia(favicon.url)\n      }]\n    };\n  },\n  computed: {\n    firstNameValid: function firstNameValid() {\n      return /^[A-Za-z]+$/.test(this.pListing.fullname);\n    }\n  }\n};",{"version":3,"sources":["List Your Property.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <Layout>\n    <loading\n      :active.sync=\"isLoading\"\n      :can-cancel=\"false\"\n      :on-cancel=\"onCancel\"\n      loader=\"dots\"\n      color=\"rgb(42, 46, 67)\"\n      :is-full-page=\"true\"\n    ></loading>\n\n    <section class=\"banner-section\">\n      <div class=\"banner\">\n        <g-image src=\"~/assets/images/Banners/property.png\" />\n        <h1>List your property</h1>\n      </div>\n    </section>\n    <section class=\"listproperty-section\">\n      <div class=\"container\">\n        <div class=\"row mt-35 mb-55\">\n          <div class=\"col-md-12 text-center\">\n            <div class=\"property-content\">\n              <h3 class=\"mb-20\">List your property</h3>\n              <p>\n                Do you own a prestigious property that has to its credit an\n                array of spectacular benefits?<br />\n                Then we can help you reach out to a larger segment of the\n                audience courtesy our<br />\n                exemplary services that will be extremely useful to you.\n              </p>\n              <br />\n              <p>\n                We can give your project the exposure that it really and truly\n                deserves. It will help you<br />\n                draw the attention of the target customers with tremendous ease.\n                So, enlist your<br />\n                property right away.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section class=\"propertyform-section pb-80\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"property-form\">\n              <ValidationObserver v-slot=\"{ handleSubmit }\">\n                <form action=\"\" @submit.prevent=\"handleSubmit(saveproperty)\">\n                  <h2>property details</h2>\n                  <hr />\n                  <div class=\"row mt-35\">\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider rules=\"required\" v-slot=\"{ errors }\">\n                        <select\n                          v-model=\"pListing['property_type']\"\n                          name=\"property_type\"\n                        >\n                          <option value=\"0\">Property Type</option>\n                          <option\n                            v-for=\"(property, index) in $page.strapi\n                              .propertyTypes\"\n                            :key=\"index\"\n                            :value=\"property.id\"\n                          >\n                            {{ property.name }}\n                          </option>\n                        </select>\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider rules=\"\" v-slot=\"{ errors }\">\n                        <input\n                          type=\"text\"\n                          name=\"development_name\"\n                          placeholder=\"Development Name (Optional)\"\n                          v-model=\"pListing.development_name\"\n                          maxlength=\"20\"\n                        />\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider rules=\"property\" v-slot=\"{ errors }\">\n                        <input\n                          type=\"text\"\n                          name=\"property_location\"\n                          placeholder=\"Property Location\"\n                          v-model=\"pListing.property_location\"\n                          maxlength=\"20\"\n                        />\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider rules=\"bedCount\" v-slot=\"{ errors }\">\n                        <input\n                          type=\"text\"\n                          name=\"number_of_beds\"\n                          placeholder=\"Number of Beds (Optional)\"\n                          v-model=\"pListing.number_of_beds\"\n                          @input=\"acceptNumber\"\n                          maxlength=\"2\"\n                        />\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider\n                        rules=\"bathRoomCount\"\n                        v-slot=\"{ errors }\"\n                      >\n                        <input\n                          type=\"text\"\n                          name=\"number_of_bathrooms\"\n                          placeholder=\"Number of Bathroom (Optional)\"\n                          v-model=\"pListing.number_of_bathrooms\"\n                          @input=\"acceptNumber\"\n                          maxlength=\"2\"\n                        />\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider rules=\"\" v-slot=\"{ errors }\">\n                        <input\n                          type=\"text\"\n                          name=\"area\"\n                          placeholder=\"Area Sq Ft (Optional)\"\n                          v-model=\"pListing.area\"\n                          v-on:keypress=\"isDouble($event)\"\n                          maxlength=\"8\"\n                        />\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                  </div>\n                  <h2 class=\"mt-40\">upload files</h2>\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider\n                        rules=\"Passportext:jpg,png,jpeg,pdf,doc,docx\"\n                        v-slot=\"{ errors, validate }\"\n                      >\n                        <label class=\"mb-12\">Passport Copy (Optional)</label>\n                        <input\n                          type=\"file\"\n                          name=\"passport\"\n                          class=\"lp-file\"\n                          @change=\"filesChange($event.target, validate)\"\n                          accept=\"image/*\"\n                        />\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider\n                        rules=\"Titleext:jpg,png,jpeg,pdf,doc,docx\"\n                        v-slot=\"{ errors, validate }\"\n                      >\n                        <label class=\"mb-12\">Title Deed (Optional)</label>\n                        <input\n                          type=\"file\"\n                          name=\"title_deed\"\n                          class=\"lp-file\"\n                          @change=\"filesChange($event.target, validate)\"\n                          accept=\"image/*\"\n                        />\n\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider\n                        rules=\"Floorext:jpg,png,jpeg,pdf,doc,docx\"\n                        v-slot=\"{ errors, validate }\"\n                      >\n                        <label class=\"mb-12\">Floor Plan (Optional)</label>\n                        <input\n                          type=\"file\"\n                          name=\"floor_plan\"\n                          class=\"lp-file\"\n                          @change=\"filesChange($event.target, validate)\"\n                          accept=\"image/*\"\n                        />\n\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                  </div>\n                  <h2 class=\"mt-40\">personal details</h2>\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider rules=\"fullName\" v-slot=\"{ errors }\">\n                        <input\n                          type=\"text\"\n                          name=\"fullname\"\n                          placeholder=\"Full Name\"\n                          v-model=\"pListing.fullname\"\n                          v-on:keypress=\"isLetter($event)\"\n                          maxlength=\"20\"\n                        />\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider\n                        rules=\"emailId|email\"\n                        v-slot=\"{ errors }\"\n                      >\n                        <input\n                          type=\"text\"\n                          name=\"emailid\"\n                          placeholder=\"Email ID\"\n                          v-model=\"pListing.emailid\"\n                          maxlength=\"30\"\n                        />\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider\n                        rules=\"mobileNo|numeric\"\n                        v-slot=\"{ errors }\"\n                      >\n                        <input\n                          type=\"text\"\n                          name=\"mobile\"\n                          placeholder=\"Mobile Number\"\n                          v-model=\"pListing.mobile\"\n                          @input=\"acceptNumber\"\n                          maxlength=\"10\"\n                        />\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <validation-provider rules=\"numeric\" v-slot=\"{ errors }\">\n                        <input\n                          type=\"text\"\n                          name=\"office_number\"\n                          placeholder=\"Office Number (Optional)\"\n                          v-model=\"pListing.office_number\"\n                          @input=\"acceptNumber\"\n                          maxlength=\"10\"\n                        />\n                        <span class=\"error-message\">{{ errors[0] }}</span>\n                      </validation-provider>\n                    </div>\n                    <div class=\"col-md-6 px-5 field-outer\">\n                      <div\n                        class=\"g-recaptcha\"\n                        data-sitekey=\"6Le8s7caAAAAAGyCdG2T61FMj9h6abRnsog5ZWGQ\"\n                      ></div>\n                    </div>\n                  </div>\n                  <input type=\"submit\" value=\"Submit\" class=\"mt-50\" />\n                  <!-- <notifications\n                    group=\"foo\"\n                    classes=\"vue-notification\"\n                    :style=\"listshow\"\n                  /> -->\n                   <notifications group=\"foo\" class=\"vue-notification\" :style=\"[isError ?{'background': '#960909','border-left': '5px solid #960909'}:{'background':'green','border-left': '5px solid green'}]\"/>\n                  <!-- <notifications group=\"foo\" :style=\"[isError ?{'color': '#960909'}:{'color':'green'}]\"/> -->\n                </form>\n              </ValidationObserver>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </Layout>\n</template>\n\n<page-query>\nquery {\n  strapi {\n    global {\n      siteName\n      favicon {\n        url\n      }\n      defaultSeo {\n        metaTitle\n        metaDescription\n        shareImage {\n          url\n        }\n      }\n    }\n    propertyTypes {\n      name\n      id\n      slug\n    }\n  }\n}\n</page-query>\n\n<script>\nimport Articles from \"~/components/Articles\";\nimport { getMetaTags } from \"~/utils/seo\";\nimport { getStrapiMedia } from \"~/utils/medias\";\nimport { extend, ValidationObserver, ValidationProvider } from \"vee-validate\";\nimport { email, numeric, required, ext } from \"vee-validate/dist/rules\";\nimport Loading from \"vue-loading-overlay\";\n\nconst axios = require(\"axios\");\n\nextend(\"Passportext\", {\n  ...ext,\n  message: \"Please Add Valid Passport Document\",\n});\nextend(\"Titleext\", {\n  ...ext,\n  message: \"Please Add Valid Title Deed Document\",\n});\nextend(\"Floorext\", {\n  ...ext,\n  message: \"Please Add Valid Floore Plan Document\",\n});\nextend(\"required\", {\n  ...required,\n  message: \"This field is required\",\n});\nextend(\"email\", {\n  ...email,\n  message: \"Enter a valid Email Id\",\n});\nextend(\"numeric\", {\n  ...numeric,\n  message: \"Enter a valid Phone Number\",\n});\n\nextend(\"bathRoomCount\", {\n  ...numeric,\n  message: \"Enter a valid Bathroom Number\",\n});\nextend(\"property\", {\n  ...required,\n  message: \"Property Location is required\",\n});\nextend(\"bedCount\", {\n  ...numeric,\n  message: \"Enter a valid BedRoom Number\",\n});\nextend(\"fullName\", {\n  ...required,\n  message: \"Full Name is required\",\n});\nextend(\"emailId\", {\n  ...required,\n  message: \"Email Id is required\",\n});\nextend(\"mobileNo\", {\n  ...required,\n  message: \"Mobile Number is required\",\n});\n\nextend(\"file\", {\n  message: \"Not a image file\",\n  validate: (value) => {\n    // console.log(\"value=\", value);\n    return false; //Test the regex. Test function returns a true or false value.\n  },\n});\n\nexport default {\n  components: {\n    Articles,\n    ValidationProvider,\n    ValidationObserver,\n    Loading,\n  },\n  data() {\n    return {\n      listshow: {\n        \"margin-left\": \"339px!important\",\n      },\n      formData: null,\n      pListing: { property_type: 0 },\n      isLoading: false,\n      isSuccess: false,\n      responseData: undefined,\n      errorResponse: undefined,\n      valueKey: \"\",\n      stringKey: \"\",\n      isError:false\n    };\n  },\n  methods: {\n    async filesChange(target, validate) {\n      let fieldName = target.name,\n        file = target.files;\n      var valid = await validate(file[0]);\n\n      if (valid.valid) {\n        this.formData.append(fieldName, file[0], file[0].name);\n      }\n    },\n    async saveproperty() {\n      const formElement = document.querySelector(\"form\");\n      this.isLoading = true;\n\n      const request = new XMLHttpRequest();\n\n      var formData = new FormData();\n\n      const formElements = formElement.elements;\n\n      const data = {};\n\n      for (let i = 0; i < formElements.length; i++) {\n        const currentElement = formElements[i];\n        if (![\"submit\", \"file\"].includes(currentElement.type)) {\n          if (currentElement.value)\n            data[currentElement.name] = currentElement.value;\n        } else if (currentElement.type === \"file\") {\n          if (currentElement.files.length === 1) {\n            const file = currentElement.files[0];\n            formData.append(`files.${currentElement.name}`, file, file.name);\n          } else {\n            for (let i = 0; i < currentElement.files.length; i++) {\n              const file = currentElement.files[i];\n              formData.append(`files.${currentElement.name}`, file, file.name);\n            }\n          }\n        }\n      }\n      recaptcha = grecaptcha.getResponse();\n      formData.recaptcha = recaptcha;\n      // //  data.append(recaptcha)\n      //     console.log(\"from list\",formData);\n\n      // start get response and show notification\n      formData.append(\"data\", JSON.stringify(data));\n      console.log(\"form data from here\", data);\n      var result = await axios\n        .post(getStrapiMedia(\"/property-listings\"), formData)\n        .then((response) => {\n          this.responseData = response.status;\n          if (this.responseData == 200) {\n            this.isError=false;\n            this.showToast();\n          }\n          alert(\"Successfully submitted\");\n        })\n        .catch((err) => {\n          this.errorResponse = err.response.data.message;\n          this.isError=true;\n          this.showErrorToast();\n        });\n      //  end res\n\n      // try {\n      //   formData.append(\"data\", JSON.stringify(data));\n      //   var result = await axios.post(\n      //     getStrapiMedia(\"/property-listings\"),\n      //     formData\n      //   );\n      //   formElement.reset();\n      //   formData = new FormData();\n      //   alert(\"Successfully submitted\");\n      //   // this.showToast();\n      // } catch (e) {\n      //   console.log(e);\n      //   alert(\"Error while submitting request\");\n      // }\n      //\n      //   request.open('POST', getStrapiMedia('/property-listings'));\n      //  request.send(formData);\n\n      this.isLoading = false;\n    },\n    onCancel() {},\n\n    showToast() {\n      this.$notify({\n        type: \"success\",\n        group: \"foo\",\n        title: \"Property Details\",\n        duration: 3000,\n        width: \"200px\",\n        position: \"center\",\n        text: \"Successfully submitted Property Details Form!\",\n      });\n    },\n    showErrorToast() {\n      this.$notify({\n        type: \"error\",\n        group: \"foo\",\n        title: \"Failed\",\n        duration: 30000,\n        width: \"200px\",\n        position: \"center\",\n        text: this.errorResponse,\n      });\n    },\n    acceptNumber() {\n      var x = this.valueKey\n        .replace(/\\D/g, \"\")\n        .match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/); // match value key is number or not\n      this.value = !x[2]\n        ? x[1]\n        : \"(\" + x[1] + \") \" + x[2] + (x[3] ? \"-\" + x[3] : \"\");\n    },\n    isLetter(e) {\n      let char = String.fromCharCode(e.keyCode); // Get the character\n      if (/^[A-Za-z]+$/.test(char)) return true;\n      // Match with regex\n      else e.preventDefault(); // If not match, don't add to input text\n    },\n    isDouble(e) {\n      let char = String.fromCharCode(e.keyCode); // Get the character\n      if (/^[0-9.]+$/.test(char)) return true;\n      else e.preventDefault();\n    },\n  },\n  mounted() {\n    this.formData = new FormData();\n    console.log(this.$page.strapi.propertyTypes);\n\n    let hypothesisScript = document.createElement(\"script\");\n    hypothesisScript.setAttribute(\n      \"src\",\n      \"https://www.google.com/recaptcha/api.js\"\n    );\n    document.body.appendChild(hypothesisScript);\n  },\n  metaInfo() {\n    const { defaultSeo, favicon } = this.$page.strapi.global;\n\n    // Merge default and article-specific SEO data\n    const fullSeo = {\n      ...defaultSeo,\n    };\n\n    return {\n      title: fullSeo.metaTitle,\n      meta: getMetaTags(fullSeo),\n      link: [\n        {\n          rel: \"favicon\",\n          href: getStrapiMedia(favicon.url),\n        },\n      ],\n    };\n  },\n  computed: {\n    firstNameValid() {\n      return /^[A-Za-z]+$/.test(this.pListing.fullname);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.vue-notification-group {\n  margin-top: 20px;\n  position: relative;\n}\n.vue-notification {\n  /* padding: 10px; */\n  margin: 0 5px 5px;\n\n  font-size: 12px;\n  margin-right: 25%;\n  color: #ffffff;\n  background: #44a4fc;\n  border-left: 5px solid #187fe7;\n  width: 300px!important;\n  top: 10px!important;\n  right: 0px!important;\n  margin-bottom: 21px!important;\n  margin-left: 344px!important;\n}\n.error-message {\n  color: #bd0000;\n}\n\n</style>\n"],"sourceRoot":"src/pages"}]}