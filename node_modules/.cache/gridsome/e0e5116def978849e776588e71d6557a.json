{"remainingRequest":"/home/blesy/Desktop/assets/node_modules/babel-loader/lib/index.js??ref--1-1!/home/blesy/Desktop/assets/src/utils/custom.js","dependencies":[{"path":"/home/blesy/Desktop/assets/src/utils/custom.js","mtime":1619525747649},{"path":"/home/blesy/Desktop/assets/node_modules/cache-loader/dist/cjs.js","mtime":1619525890957},{"path":"/home/blesy/Desktop/assets/node_modules/babel-loader/lib/index.js","mtime":1619525890949}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/blesy/Desktop/assets/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getStrapiMedia } from \"~/utils/medias\";\nexport function saveContact(_x) {\n  return _saveContact.apply(this, arguments);\n}\n\nfunction _saveContact() {\n  _saveContact = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event) {\n    var axios, data;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"data from contact\", event);\n            axios = require('axios');\n            _context.next = 4;\n            return axios.post(getStrapiMedia('/contactuses'), event, {\n              headers: {\n                'Accept': 'application/json'\n              }\n            }).then(function (response) {\n              return {\n                status: true,\n                data: response,\n                message: \"Successs save\"\n              };\n            })[\"catch\"](function (error) {\n              return {\n                status: false,\n                data: error.response.data,\n                message: error.response.data.message\n              };\n            });\n\n          case 4:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _saveContact.apply(this, arguments);\n}\n\nexport function saveNewsletter(data) {\n  var axios = require('axios');\n\n  axios.post(getStrapiMedia('/newsletters'), data, {\n    headers: {\n      'Accept': 'application/json'\n    }\n  }).then(function (response) {\n    console.log(response);\n    alert(\"Your subscription was successful!\");\n  })[\"catch\"](function (error) {\n    alert('Error while submit form');\n    console.log(error);\n  });\n}\nexport function captchaReady(data) {\n  console.log('watching....');\n\n  if (data) {\n    clearInterval(this.checkingInterval);\n    this.captchaRender();\n  }\n}\nexport function captchaRender() {\n  console.log('rendering captchaRender', \"g-captcha-contact-form\" + this.formKey);\n  grecaptcha.render(\"g-captcha-contact-form\" + this.formKey, {\n    sitekey: \"6Le8s7caAAAAAGyCdG2T61FMj9h6abRnsog5ZWGQ\",\n    callback: this.captchaResponse\n  });\n}\nexport function captchaResponse(response) {\n  this.captchaToken = response;\n}\nexport var captchaDataVar = {\n  captchaReady: false,\n  checkingInterval: null\n};",{"version":3,"sources":["/home/blesy/Desktop/assets/src/utils/custom.js"],"names":["getStrapiMedia","saveContact","event","console","log","axios","require","post","headers","then","response","status","data","message","error","saveNewsletter","alert","captchaReady","clearInterval","checkingInterval","captchaRender","formKey","grecaptcha","render","sitekey","callback","captchaResponse","captchaToken","captchaDataVar"],"mappings":";;AAAA,SAAQA,cAAR,QAA6B,gBAA7B;AAGA,gBAAsBC,WAAtB;AAAA;AAAA;;;yEAAO,iBAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;AACMG,YAAAA,KAFH,GAEWC,OAAO,CAAC,OAAD,CAFlB;AAAA;AAAA,mBAGcD,KAAK,CAACE,IAAN,CAAWP,cAAc,CAAC,cAAD,CAAzB,EAA2CE,KAA3C,EAAkD;AAACM,cAAAA,OAAO,EAAE;AAAC,0BAAU;AAAX;AAAV,aAAlD,EACZC,IADY,CACP,UAAUC,QAAV,EAAoB;AACtB,qBAAO;AAACC,gBAAAA,MAAM,EAAE,IAAT;AAAeC,gBAAAA,IAAI,EAAEF,QAArB;AAA+BG,gBAAAA,OAAO,EAAE;AAAxC,eAAP;AACH,aAHY,WAIN,UAAUC,KAAV,EAAiB;AACpB,qBAAO;AAACH,gBAAAA,MAAM,EAAE,KAAT;AAAgBC,gBAAAA,IAAI,EAAEE,KAAK,CAACJ,QAAN,CAAeE,IAArC;AAA2CC,gBAAAA,OAAO,EAAEC,KAAK,CAACJ,QAAN,CAAeE,IAAf,CAAoBC;AAAxE,eAAP;AACH,aANY,CAHd;;AAAA;AAGCD,YAAAA,IAHD;AAAA,6CAUIA,IAVJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAcP,OAAO,SAASG,cAAT,CAAwBH,IAAxB,EAA8B;AACjC,MAAMP,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACAD,EAAAA,KAAK,CAACE,IAAN,CAAWP,cAAc,CAAC,cAAD,CAAzB,EAA2CY,IAA3C,EAAiD;AAACJ,IAAAA,OAAO,EAAE;AAAC,gBAAU;AAAX;AAAV,GAAjD,EACKC,IADL,CACU,UAAUC,QAAV,EAAoB;AACtBP,IAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACAM,IAAAA,KAAK,CAAC,mCAAD,CAAL;AACH,GAJL,WAKW,UAAUF,KAAV,EAAiB;AACpBE,IAAAA,KAAK,CAAC,yBAAD,CAAL;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACH,GARL;AAUH;AAGD,OAAO,SAASG,YAAT,CAAsBL,IAAtB,EAA4B;AAC/BT,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,MAAIQ,IAAJ,EAAU;AACNM,IAAAA,aAAa,CAAC,KAAKC,gBAAN,CAAb;AACA,SAAKC,aAAL;AACH;AACJ;AAED,OAAO,SAASA,aAAT,GAAyB;AAE5BjB,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsC,2BAA2B,KAAKiB,OAAtE;AACAC,EAAAA,UAAU,CAACC,MAAX,CAAkB,2BAA2B,KAAKF,OAAlD,EAA4D;AACxDG,IAAAA,OAAO,EAAE,0CAD+C;AAExDC,IAAAA,QAAQ,EAAE,KAAKC;AAFyC,GAA5D;AAIH;AAED,OAAO,SAASA,eAAT,CAAyBhB,QAAzB,EAAmC;AACtC,OAAKiB,YAAL,GAAoBjB,QAApB;AACH;AAED,OAAO,IAAIkB,cAAc,GAAG;AACxBX,EAAAA,YAAY,EAAE,KADU;AAExBE,EAAAA,gBAAgB,EAAE;AAFM,CAArB","sourcesContent":["import {getStrapiMedia} from \"~/utils/medias\";\n\n\nexport async function saveContact(event) {\n    console.log(\"data from contact\", event);\n    const axios = require('axios')\n    var data = await axios.post(getStrapiMedia('/contactuses'), event, {headers: {'Accept': 'application/json'}})\n        .then(function (response) {\n            return {status: true, data: response, message: \"Successs save\"}\n        })\n        .catch(function (error) {\n            return {status: false, data: error.response.data, message: error.response.data.message}\n        });\n    return data;\n\n}\n\nexport function saveNewsletter(data) {\n    const axios = require('axios')\n    axios.post(getStrapiMedia('/newsletters'), data, {headers: {'Accept': 'application/json'}})\n        .then(function (response) {\n            console.log(response);\n            alert(\"Your subscription was successful!\");\n        })\n        .catch(function (error) {\n            alert('Error while submit form')\n            console.log(error);\n        });\n\n}\n\n\nexport function captchaReady(data) {\n    console.log('watching....');\n    if (data) {\n        clearInterval(this.checkingInterval);\n        this.captchaRender()\n    }\n}\n\nexport function captchaRender() {\n\n    console.log('rendering captchaRender',\"g-captcha-contact-form\" + this.formKey );\n    grecaptcha.render(\"g-captcha-contact-form\" + this.formKey , {\n        sitekey: \"6Le8s7caAAAAAGyCdG2T61FMj9h6abRnsog5ZWGQ\",\n        callback: this.captchaResponse,\n    });\n}\n\nexport function captchaResponse(response) {\n    this.captchaToken = response;\n}\n\nexport var captchaDataVar = {\n    captchaReady: false,\n    checkingInterval: null\n};\n"]}]}